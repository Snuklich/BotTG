#–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from dataclasses import replace
import requests
import datetime
from config import tg_bot_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from config import login_spyer
from config import token_spyer

#–ù–∞–∑–Ω–∞—á–∞–µ–º –¥–∏—Å–ø–∞—Ç—á–µ—Ä –∏ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Ç–æ–∫–µ–Ω—É
bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)

# –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–°—Ç–∞—Ä—Ç" –æ—Ç —é–∑–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–º—É –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@dp.message_handler(commands="start")
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="Soccer")
    keyboard.add(button_1)
    button_2 = "Basketball"
    keyboard.add(button_2)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞", reply_markup=keyboard)

#–í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
@dp.message_handler()
async def get_score(message: types.Message):
    try:
        r = requests.get(
            f'https://spoyer.ru/api/get.php?login={login_spyer}&token={token_spyer}&task=livedata&sport={message.text}'
        )
        data = r.json()
        #pprint(data) # –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ json
        
        # –ù–∞–∑–Ω–∞—á–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ json
        number_match1 = data['games_live'][0]['game_id']
        number_match2 = data['games_live'][1]['game_id']
        number_match3 = data['games_live'][2]['game_id']
        #data_game1 = datetime.fromtimestamp(data['games_live'][0]['time'])
        #data_game2 = datetime.datetime.fromtimestamp(data['games_live'][1]['time'])
        #data_game3 = datetime.datetime.fromtimestamp(data['games_live'][2]['time'])
        league1 = data['games_live'][0]['league']['name']
        league2 = data['games_live'][1]['league']['name']
        league3 = data['games_live'][2]['league']['name']
        home1 = data['games_live'][0]['home']['name']
        home2 = data['games_live'][1]['home']['name']
        home3 = data['games_live'][2]['home']['name']
        away1 = data['games_live'][0]['away']['name']
        away2 = data['games_live'][1]['away']['name']
        away3 = data['games_live'][2]['away']['name']
        score1 = data['games_live'][0]['score']
        score2 = data['games_live'][1]['score']
        score3 = data['games_live'][2]['score']

        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º –∫–ª—é—á–∞–º
        await message.reply(f'–ù–æ–º–µ—Ä –º–∞—Ç—á–∞: {number_match1}\n–õ–∏–≥–∞: {league1}\n–•–æ–∑—è–µ–≤–∞: {home1}\n–ì–æ—Å—Ç–∏: {away1}\n–°—á–µ—Ç: {score1}\n')
        await message.reply(f'–ù–æ–º–µ—Ä –º–∞—Ç—á–∞: {number_match2}\n–õ–∏–≥–∞: {league2}\n–•–æ–∑—è–µ–≤–∞: {home2}\n–ì–æ—Å—Ç–∏: {away2}\n–°—á–µ—Ç: {score2}\n')
        await message.reply(f'–ù–æ–º–µ—Ä –º–∞—Ç—á–∞: {number_match3}\n–õ–∏–≥–∞: {league3}\n–•–æ–∑—è–µ–≤–∞: {home3}\n–ì–æ—Å—Ç–∏: {away3}\n–°—á–µ—Ç: {score3}\n')

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ç–µ–∫—Å—Ç —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, —Ç–æ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
    except:
        await message.reply('üò¢–¢–∞–∫–æ–≥–æ —Å–ø–æ—Ä—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Çüò¢')

        # –ü–æ–∑–≤–æ–ª—è–µ—Ç –±–æ—Ç—É —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
if __name__ == '__main__':
    executor.start_polling(dp)